@page "/wizard"

@using AcsaDemo.Components
@using AcsaDemo.Model
@using System.Text.Json
@using System.Text.Json.Serialization;

@inject HttpClient Http
  
<section class="text-center colorEncabezado">
    <div class="row mb-4">
        <img src="/Resources/logoAcsa.svg" class="img-fluid col-6" alt="" />
    </div>
    <div class="row col-12 mb-4">
        <h6>Formulario seguro medico</h6>
        <h2>PSM Internacional</h2>
    </div>
</section>

<Wizard Id="DemoWizard">
    <WizardStep Name="First Step">
        <div class="card-no-border mb-3">
            <div class="card-body p-0">
                <div class="card-title mb-3">
                    <h5 class="colorEncabezado">Bienvenido al sistema de aceptacion digital ACSA</h5>
                    <br />
                    <p>Podra completar y firmar los siguientes documentos para la emision de su seguro</p>
                </div>
                <ol class="list-unstyled colorLista">
                    <li>&#8226; Solicitud de Seguro</li>
                    <li>&#8226; Declaracion Jurada</li>
                    <li>&#8226; Ficha Integral</li>
                    <li>&#8226; Oferta de Seguro</li>
                </ol>
            </div>
        </div>
    </WizardStep>
    <WizardStep Name="Second Step">

        <EditForm Model="_inter" OnSubmit="enviar">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="form-group">
                <!--DETALLES DE INTERMEDIARIO O CLIENTE-->
                <label for="nit" class="labelDatos">Indicanos tu NIT o correo electronico:</label>
                <InputText id="nit" class="form-control inputEntrada" @bind-Value="_inter.nit" @oninput="recibir"></InputText>
                <ValidationMessage For="(()=>_inter.nit)"></ValidationMessage>

                <!--DETALLES DE LA OFERTA SEGUN CLIENTE-->

                <label class="labelDatos" for="titular">Asegurado titular: </label>
                <InputText id="titular" class="form-control inputDatos" readonly @bind-Value="_inter.nombre"></InputText>
                <label class="labelDatos" for="titular">Fecha de nacimiento conyuge: </label>
                <InputText readonly id="titular" class="form-control inputDatos" @bind-Value="_inter.fecha_nac_conyuge"></InputText>
                <label class="labelDatos" for="titular">No de hijos a asegurar: </label>
                <InputNumber readonly id="titular" class="form-control inputDatos" @bind-Value="_inter.n_hijos"></InputNumber>
                <label class="labelDatos" for="titular">Suma de vida para titular: </label>
                <InputNumber readonly id="titular" class="form-control inputDatos" @bind-Value="_inter.suma_titular"></InputNumber>
                <label class="labelDatos" for="titular">Suma de vida para conyuge: </label>
                <InputNumber readonly id="titular" class="form-control inputDatos" @bind-Value="_inter.suma_conyuge"></InputNumber>
                <label class="labelDatos" for="titular">Valor primera cuota: </label>
                <InputNumber readonly id="titular" class="form-control inputDatos" @bind-Value="_inter.valor_pcuota"></InputNumber>
                <label class="labelDatos" for="titular">Valor cuota sucesiva: </label>
                <InputNumber readonly id="titular" class="form-control inputDatos" @bind-Value="_inter.valor_csucesiva"></InputNumber>
            </div>
        </EditForm>
    </WizardStep>
</Wizard>

@code {

    private string? nit;
    private Intermediario _inter = new Intermediario();
    public Intermediario vacio = new Intermediario();
    
    /*
    private string searchstring;
    HttpRequestMessage requestMessage;
    HttpResponseMessage responseMessage;
    HttpClient htp;
    List<Intermediario> todos;
    private Oferta _oferta { get; set; } = new Oferta();
    */

    private Intermediario[] todos;
    protected override async Task OnInitializedAsync()
    {
        /*htp = new HttpClient();
        requestMessage = new HttpRequestMessage
        {
            Method = HttpMethod.Get,
            RequestUri = new Uri("http://192.168.99.121:8084/api/contratantes")
        };
        responseMessage = await htp.SendAsync(requestMessage);
        todos = JsonSerializer.Deserialize<List<Intermediario>>(await responseMessage.Content.ReadAsStringAsync());*/

        todos = await Http.GetFromJsonAsync<Intermediario[]>("http://192.168.99.121:8084/api/contratantes");
    }



    private void enviar() { }
    private void recibir(ChangeEventArgs e)
    {
        bool encontrado = false;
        nit = e?.Value?.ToString();
        foreach (var intermediarios in todos)
        {
            if (nit.Equals(intermediarios.nit))
            {
                _inter.actualizarDatos(intermediarios);
                encontrado = true;
            }
            else if (!encontrado)
            {
                _inter.actualizarDatos(vacio);
            }
        }

    }
}